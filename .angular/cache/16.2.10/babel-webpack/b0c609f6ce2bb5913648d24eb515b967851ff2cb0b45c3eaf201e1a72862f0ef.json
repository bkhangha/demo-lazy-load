{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { ObjectUtils } from 'primeng/utils';\nconst _c0 = [\"input\"];\nfunction Checkbox_ng_container_5_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.checkboxIcon);\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Checkbox_ng_container_5_ng_container_1_CheckIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"CheckIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-checkbox-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Checkbox_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Checkbox_ng_container_5_ng_container_1_span_1_Template, 1, 2, \"span\", 8);\n    i0.ɵɵtemplate(2, Checkbox_ng_container_5_ng_container_1_CheckIcon_2_Template, 1, 2, \"CheckIcon\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.checkboxIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.checkboxIcon);\n  }\n}\nfunction Checkbox_ng_container_5_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Checkbox_ng_container_5_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Checkbox_ng_container_5_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Checkbox_ng_container_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, Checkbox_ng_container_5_span_2_1_Template, 1, 0, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.checkboxIconTemplate);\n  }\n}\nfunction Checkbox_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Checkbox_ng_container_5_ng_container_1_Template, 3, 2, \"ng-container\", 5);\n    i0.ɵɵtemplate(2, Checkbox_ng_container_5_span_2_Template, 2, 2, \"span\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.checkboxIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkboxIconTemplate);\n  }\n}\nconst _c1 = function (a1, a2, a3) {\n  return {\n    \"p-checkbox-label\": true,\n    \"p-checkbox-label-active\": a1,\n    \"p-disabled\": a2,\n    \"p-checkbox-label-focus\": a3\n  };\n};\nfunction Checkbox_label_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 14);\n    i0.ɵɵlistener(\"click\", function Checkbox_label_6_Template_label_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onClick($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.labelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(6, _c1, ctx_r2.checked(), ctx_r2.disabled, ctx_r2.focused));\n    i0.ɵɵattribute(\"for\", ctx_r2.inputId)(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.label, \"\");\n  }\n}\nconst _c2 = function (a1, a2, a3) {\n  return {\n    \"p-checkbox p-component\": true,\n    \"p-checkbox-checked\": a1,\n    \"p-checkbox-disabled\": a2,\n    \"p-checkbox-focused\": a3\n  };\n};\nconst _c3 = function (a0, a1, a2) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1,\n    \"p-focus\": a2\n  };\n};\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n/**\n * Checkbox is an extension to standard checkbox element with theming.\n * @group Components\n */\nclass Checkbox {\n  cd;\n  /**\n   * Value of the checkbox.\n   * @group Props\n   */\n  value;\n  /**\n   * Name of the checkbox group.\n   * @group Props\n   */\n  name;\n  /**\n   * When present, it specifies that the element should be disabled.\n   * @group Props\n   */\n  disabled;\n  /**\n   * Allows to select a boolean value instead of multiple values.\n   * @group Props\n   */\n  binary;\n  /**\n   * Label of the checkbox.\n   * @group Props\n   */\n  label;\n  /**\n   * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * Used to define a string that labels the input element.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  tabindex;\n  /**\n   * Identifier of the focus input to match a label defined for the component.\n   * @group Props\n   */\n  inputId;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Style class of the label.\n   * @group Props\n   */\n  labelStyleClass;\n  /**\n   * Form control value.\n   * @group Props\n   */\n  formControl;\n  /**\n   * Icon class of the checkbox icon.\n   * @group Props\n   */\n  checkboxIcon;\n  /**\n   * When present, it specifies that the component cannot be edited.\n   * @group Props\n   */\n  readonly;\n  /**\n   * When present, it specifies that checkbox must be checked before submitting the form.\n   * @group Props\n   */\n  required;\n  /**\n   * Value in checked state.\n   * @group Props\n   */\n  trueValue = true;\n  /**\n   * Value in unchecked state.\n   * @group Props\n   */\n  falseValue = false;\n  /**\n   * Callback to invoke on value change.\n   * @param {CheckboxChangeEvent} event - Custom value change event.\n   * @group Emits\n   */\n  onChange = new EventEmitter();\n  inputViewChild;\n  templates;\n  checkboxIconTemplate;\n  model;\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  focused = false;\n  constructor(cd) {\n    this.cd = cd;\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'icon':\n          this.checkboxIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  onClick(event) {\n    if (!this.disabled && !this.readonly) {\n      this.inputViewChild.nativeElement.focus();\n      let newModelValue;\n      if (!this.binary) {\n        if (this.checked()) newModelValue = this.model.filter(val => !ObjectUtils.equals(val, this.value));else newModelValue = this.model ? [...this.model, this.value] : [this.value];\n        this.onModelChange(newModelValue);\n        this.model = newModelValue;\n        if (this.formControl) {\n          this.formControl.setValue(newModelValue);\n        }\n      } else {\n        newModelValue = this.checked() ? this.falseValue : this.trueValue;\n        this.model = newModelValue;\n        this.onModelChange(newModelValue);\n      }\n      this.onChange.emit({\n        checked: newModelValue,\n        originalEvent: event\n      });\n    }\n  }\n  onFocus() {\n    this.focused = true;\n  }\n  onBlur() {\n    this.focused = false;\n    this.onModelTouched();\n  }\n  writeValue(model) {\n    this.model = model;\n    this.cd.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  checked() {\n    return this.binary ? this.model === this.trueValue : ObjectUtils.contains(this.value, this.model);\n  }\n  static ɵfac = function Checkbox_Factory(t) {\n    return new (t || Checkbox)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Checkbox,\n    selectors: [[\"p-checkbox\"]],\n    contentQueries: function Checkbox_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Checkbox_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      value: \"value\",\n      name: \"name\",\n      disabled: \"disabled\",\n      binary: \"binary\",\n      label: \"label\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      ariaLabel: \"ariaLabel\",\n      tabindex: \"tabindex\",\n      inputId: \"inputId\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      labelStyleClass: \"labelStyleClass\",\n      formControl: \"formControl\",\n      checkboxIcon: \"checkboxIcon\",\n      readonly: \"readonly\",\n      required: \"required\",\n      trueValue: \"trueValue\",\n      falseValue: \"falseValue\"\n    },\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])],\n    decls: 7,\n    vars: 35,\n    consts: [[3, \"ngStyle\", \"ngClass\", \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"value\", \"checked\", \"disabled\", \"readonly\", \"focus\", \"blur\"], [\"input\", \"\"], [1, \"p-checkbox-box\", 3, \"ngClass\"], [4, \"ngIf\"], [3, \"class\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-checkbox-icon\", 4, \"ngIf\"], [\"class\", \"p-checkbox-icon\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"], [3, \"styleClass\"], [1, \"p-checkbox-icon\"], [4, \"ngTemplateOutlet\"], [3, \"ngClass\", \"click\"]],\n    template: function Checkbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function Checkbox_Template_div_click_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"input\", 2, 3);\n        i0.ɵɵlistener(\"focus\", function Checkbox_Template_input_focus_2_listener() {\n          return ctx.onFocus();\n        })(\"blur\", function Checkbox_Template_input_blur_2_listener() {\n          return ctx.onBlur();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtemplate(5, Checkbox_ng_container_5_Template, 3, 2, \"ng-container\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, Checkbox_label_6_Template, 2, 10, \"label\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction3(27, _c2, ctx.checked(), ctx.disabled, ctx.focused));\n        i0.ɵɵattribute(\"data-pc-name\", \"checkbox\")(\"data-pc-section\", \"root\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"data-pc-section\", \"hiddenInputWrapper\")(\"data-p-hidden-accessible\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.value)(\"checked\", ctx.checked())(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly);\n        i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"tabindex\", ctx.tabindex)(\"required\", ctx.required)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"aria-checked\", ctx.checked())(\"data-pc-section\", \"hiddenInput\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(31, _c3, ctx.checked(), ctx.disabled, ctx.focused));\n        i0.ɵɵattribute(\"data-p-highlight\", ctx.checked())(\"data-p-disabled\", ctx.disabled)(\"data-p-focused\", ctx.focused)(\"data-pc-section\", \"input\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checked());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.label);\n      }\n    },\n    dependencies: function () {\n      return [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, CheckIcon];\n    },\n    styles: [\"@layer primeng{.p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;vertical-align:bottom;position:relative}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Checkbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-checkbox',\n      template: `\n        <div\n            [ngStyle]=\"style\"\n            [ngClass]=\"{ 'p-checkbox p-component': true, 'p-checkbox-checked': checked(), 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused }\"\n            [class]=\"styleClass\"\n            [attr.data-pc-name]=\"'checkbox'\"\n            [attr.data-pc-section]=\"'root'\"\n            (click)=\"onClick($event)\"\n        >\n            <div class=\"p-hidden-accessible\" [attr.data-pc-section]=\"'hiddenInputWrapper'\" [attr.data-p-hidden-accessible]=\"true\">\n                <input\n                    #input\n                    [attr.id]=\"inputId\"\n                    type=\"checkbox\"\n                    [value]=\"value\"\n                    [attr.name]=\"name\"\n                    [checked]=\"checked()\"\n                    [attr.tabindex]=\"tabindex\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [attr.required]=\"required\"\n                    [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    [attr.aria-label]=\"ariaLabel\"\n                    [attr.aria-checked]=\"checked()\"\n                    (focus)=\"onFocus()\"\n                    (blur)=\"onBlur()\"\n                    [attr.data-pc-section]=\"'hiddenInput'\"\n                />\n            </div>\n            <div\n                class=\"p-checkbox-box\"\n                [ngClass]=\"{ 'p-highlight': checked(), 'p-disabled': disabled, 'p-focus': focused }\"\n                [attr.data-p-highlight]=\"checked()\"\n                [attr.data-p-disabled]=\"disabled\"\n                [attr.data-p-focused]=\"focused\"\n                [attr.data-pc-section]=\"'input'\"\n            >\n                <ng-container *ngIf=\"checked()\">\n                    <ng-container *ngIf=\"!checkboxIconTemplate\">\n                        <span *ngIf=\"checkboxIcon\" class=\"p-checkbox-icon\" [ngClass]=\"checkboxIcon\" [attr.data-pc-section]=\"'icon'\"></span>\n                        <CheckIcon *ngIf=\"!checkboxIcon\" [styleClass]=\"'p-checkbox-icon'\" [attr.data-pc-section]=\"'icon'\" />\n                    </ng-container>\n                    <span *ngIf=\"checkboxIconTemplate\" class=\"p-checkbox-icon\" [attr.data-pc-section]=\"'icon'\">\n                        <ng-template *ngTemplateOutlet=\"checkboxIconTemplate\"></ng-template>\n                    </span>\n                </ng-container>\n            </div>\n        </div>\n        <label\n            (click)=\"onClick($event)\"\n            [class]=\"labelStyleClass\"\n            [ngClass]=\"{ 'p-checkbox-label': true, 'p-checkbox-label-active': checked(), 'p-disabled': disabled, 'p-checkbox-label-focus': focused }\"\n            *ngIf=\"label\"\n            [attr.for]=\"inputId\"\n            [attr.data-pc-section]=\"'label'\"\n        >\n            {{ label }}</label\n        >\n    `,\n      providers: [CHECKBOX_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\"@layer primeng{.p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;vertical-align:bottom;position:relative}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    binary: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    labelStyleClass: [{\n      type: Input\n    }],\n    formControl: [{\n      type: Input\n    }],\n    checkboxIcon: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    trueValue: [{\n      type: Input\n    }],\n    falseValue: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    inputViewChild: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass CheckboxModule {\n  static ɵfac = function CheckboxModule_Factory(t) {\n    return new (t || CheckboxModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CheckboxModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, CheckIcon, SharedModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, CheckIcon],\n      exports: [Checkbox, SharedModule],\n      declarations: [Checkbox]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CHECKBOX_VALUE_ACCESSOR, Checkbox, CheckboxModule };","map":{"version":3,"names":["i1","CommonModule","i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChildren","NgModule","NG_VALUE_ACCESSOR","PrimeTemplate","SharedModule","CheckIcon","ObjectUtils","_c0","Checkbox_ng_container_5_ng_container_1_span_1_Template","rf","ctx","ɵɵelement","ctx_r5","ɵɵnextContext","ɵɵproperty","checkboxIcon","ɵɵattribute","Checkbox_ng_container_5_ng_container_1_CheckIcon_2_Template","Checkbox_ng_container_5_ng_container_1_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r3","ɵɵadvance","Checkbox_ng_container_5_span_2_1_ng_template_0_Template","Checkbox_ng_container_5_span_2_1_Template","Checkbox_ng_container_5_span_2_Template","ɵɵelementStart","ɵɵelementEnd","ctx_r4","checkboxIconTemplate","Checkbox_ng_container_5_Template","ctx_r1","_c1","a1","a2","a3","Checkbox_label_6_Template","_r10","ɵɵgetCurrentView","ɵɵlistener","Checkbox_label_6_Template_label_click_0_listener","$event","ɵɵrestoreView","ctx_r9","ɵɵresetView","onClick","ɵɵtext","ctx_r2","ɵɵclassMap","labelStyleClass","ɵɵpureFunction3","checked","disabled","focused","inputId","ɵɵtextInterpolate1","label","_c2","_c3","a0","CHECKBOX_VALUE_ACCESSOR","provide","useExisting","Checkbox","multi","cd","value","name","binary","ariaLabelledBy","ariaLabel","tabindex","style","styleClass","formControl","readonly","required","trueValue","falseValue","onChange","inputViewChild","templates","model","onModelChange","onModelTouched","constructor","ngAfterContentInit","forEach","item","getType","template","event","nativeElement","focus","newModelValue","filter","val","equals","setValue","emit","originalEvent","onFocus","onBlur","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","contains","ɵfac","Checkbox_Factory","t","ɵɵdirectiveInject","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","Checkbox_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","Checkbox_Query","ɵɵviewQuery","first","hostAttrs","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","Checkbox_Template","Checkbox_Template_div_click_0_listener","Checkbox_Template_input_focus_2_listener","Checkbox_Template_input_blur_2_listener","dependencies","NgClass","NgIf","NgTemplateOutlet","NgStyle","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","providers","OnPush","None","host","class","CheckboxModule","CheckboxModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/sandbox/node_modules/primeng/fesm2022/primeng-checkbox.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { ObjectUtils } from 'primeng/utils';\n\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Checkbox),\n    multi: true\n};\n/**\n * Checkbox is an extension to standard checkbox element with theming.\n * @group Components\n */\nclass Checkbox {\n    cd;\n    /**\n     * Value of the checkbox.\n     * @group Props\n     */\n    value;\n    /**\n     * Name of the checkbox group.\n     * @group Props\n     */\n    name;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Allows to select a boolean value instead of multiple values.\n     * @group Props\n     */\n    binary;\n    /**\n     * Label of the checkbox.\n     * @group Props\n     */\n    label;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Used to define a string that labels the input element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * Identifier of the focus input to match a label defined for the component.\n     * @group Props\n     */\n    inputId;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the label.\n     * @group Props\n     */\n    labelStyleClass;\n    /**\n     * Form control value.\n     * @group Props\n     */\n    formControl;\n    /**\n     * Icon class of the checkbox icon.\n     * @group Props\n     */\n    checkboxIcon;\n    /**\n     * When present, it specifies that the component cannot be edited.\n     * @group Props\n     */\n    readonly;\n    /**\n     * When present, it specifies that checkbox must be checked before submitting the form.\n     * @group Props\n     */\n    required;\n    /**\n     * Value in checked state.\n     * @group Props\n     */\n    trueValue = true;\n    /**\n     * Value in unchecked state.\n     * @group Props\n     */\n    falseValue = false;\n    /**\n     * Callback to invoke on value change.\n     * @param {CheckboxChangeEvent} event - Custom value change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    inputViewChild;\n    templates;\n    checkboxIconTemplate;\n    model;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    focused = false;\n    constructor(cd) {\n        this.cd = cd;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'icon':\n                    this.checkboxIconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    onClick(event) {\n        if (!this.disabled && !this.readonly) {\n            this.inputViewChild.nativeElement.focus();\n            let newModelValue;\n            if (!this.binary) {\n                if (this.checked())\n                    newModelValue = this.model.filter((val) => !ObjectUtils.equals(val, this.value));\n                else\n                    newModelValue = this.model ? [...this.model, this.value] : [this.value];\n                this.onModelChange(newModelValue);\n                this.model = newModelValue;\n                if (this.formControl) {\n                    this.formControl.setValue(newModelValue);\n                }\n            }\n            else {\n                newModelValue = this.checked() ? this.falseValue : this.trueValue;\n                this.model = newModelValue;\n                this.onModelChange(newModelValue);\n            }\n            this.onChange.emit({ checked: newModelValue, originalEvent: event });\n        }\n    }\n    onFocus() {\n        this.focused = true;\n    }\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n    writeValue(model) {\n        this.model = model;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    checked() {\n        return this.binary ? this.model === this.trueValue : ObjectUtils.contains(this.value, this.model);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Checkbox, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: Checkbox, selector: \"p-checkbox\", inputs: { value: \"value\", name: \"name\", disabled: \"disabled\", binary: \"binary\", label: \"label\", ariaLabelledBy: \"ariaLabelledBy\", ariaLabel: \"ariaLabel\", tabindex: \"tabindex\", inputId: \"inputId\", style: \"style\", styleClass: \"styleClass\", labelStyleClass: \"labelStyleClass\", formControl: \"formControl\", checkboxIcon: \"checkboxIcon\", readonly: \"readonly\", required: \"required\", trueValue: \"trueValue\", falseValue: \"falseValue\" }, outputs: { onChange: \"onChange\" }, host: { classAttribute: \"p-element\" }, providers: [CHECKBOX_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"inputViewChild\", first: true, predicate: [\"input\"], descendants: true }], ngImport: i0, template: `\n        <div\n            [ngStyle]=\"style\"\n            [ngClass]=\"{ 'p-checkbox p-component': true, 'p-checkbox-checked': checked(), 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused }\"\n            [class]=\"styleClass\"\n            [attr.data-pc-name]=\"'checkbox'\"\n            [attr.data-pc-section]=\"'root'\"\n            (click)=\"onClick($event)\"\n        >\n            <div class=\"p-hidden-accessible\" [attr.data-pc-section]=\"'hiddenInputWrapper'\" [attr.data-p-hidden-accessible]=\"true\">\n                <input\n                    #input\n                    [attr.id]=\"inputId\"\n                    type=\"checkbox\"\n                    [value]=\"value\"\n                    [attr.name]=\"name\"\n                    [checked]=\"checked()\"\n                    [attr.tabindex]=\"tabindex\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [attr.required]=\"required\"\n                    [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    [attr.aria-label]=\"ariaLabel\"\n                    [attr.aria-checked]=\"checked()\"\n                    (focus)=\"onFocus()\"\n                    (blur)=\"onBlur()\"\n                    [attr.data-pc-section]=\"'hiddenInput'\"\n                />\n            </div>\n            <div\n                class=\"p-checkbox-box\"\n                [ngClass]=\"{ 'p-highlight': checked(), 'p-disabled': disabled, 'p-focus': focused }\"\n                [attr.data-p-highlight]=\"checked()\"\n                [attr.data-p-disabled]=\"disabled\"\n                [attr.data-p-focused]=\"focused\"\n                [attr.data-pc-section]=\"'input'\"\n            >\n                <ng-container *ngIf=\"checked()\">\n                    <ng-container *ngIf=\"!checkboxIconTemplate\">\n                        <span *ngIf=\"checkboxIcon\" class=\"p-checkbox-icon\" [ngClass]=\"checkboxIcon\" [attr.data-pc-section]=\"'icon'\"></span>\n                        <CheckIcon *ngIf=\"!checkboxIcon\" [styleClass]=\"'p-checkbox-icon'\" [attr.data-pc-section]=\"'icon'\" />\n                    </ng-container>\n                    <span *ngIf=\"checkboxIconTemplate\" class=\"p-checkbox-icon\" [attr.data-pc-section]=\"'icon'\">\n                        <ng-template *ngTemplateOutlet=\"checkboxIconTemplate\"></ng-template>\n                    </span>\n                </ng-container>\n            </div>\n        </div>\n        <label\n            (click)=\"onClick($event)\"\n            [class]=\"labelStyleClass\"\n            [ngClass]=\"{ 'p-checkbox-label': true, 'p-checkbox-label-active': checked(), 'p-disabled': disabled, 'p-checkbox-label-focus': focused }\"\n            *ngIf=\"label\"\n            [attr.for]=\"inputId\"\n            [attr.data-pc-section]=\"'label'\"\n        >\n            {{ label }}</label\n        >\n    `, isInline: true, styles: [\"@layer primeng{.p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;vertical-align:bottom;position:relative}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i1.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(function () { return CheckIcon; }), selector: \"CheckIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Checkbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-checkbox', template: `\n        <div\n            [ngStyle]=\"style\"\n            [ngClass]=\"{ 'p-checkbox p-component': true, 'p-checkbox-checked': checked(), 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused }\"\n            [class]=\"styleClass\"\n            [attr.data-pc-name]=\"'checkbox'\"\n            [attr.data-pc-section]=\"'root'\"\n            (click)=\"onClick($event)\"\n        >\n            <div class=\"p-hidden-accessible\" [attr.data-pc-section]=\"'hiddenInputWrapper'\" [attr.data-p-hidden-accessible]=\"true\">\n                <input\n                    #input\n                    [attr.id]=\"inputId\"\n                    type=\"checkbox\"\n                    [value]=\"value\"\n                    [attr.name]=\"name\"\n                    [checked]=\"checked()\"\n                    [attr.tabindex]=\"tabindex\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [attr.required]=\"required\"\n                    [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    [attr.aria-label]=\"ariaLabel\"\n                    [attr.aria-checked]=\"checked()\"\n                    (focus)=\"onFocus()\"\n                    (blur)=\"onBlur()\"\n                    [attr.data-pc-section]=\"'hiddenInput'\"\n                />\n            </div>\n            <div\n                class=\"p-checkbox-box\"\n                [ngClass]=\"{ 'p-highlight': checked(), 'p-disabled': disabled, 'p-focus': focused }\"\n                [attr.data-p-highlight]=\"checked()\"\n                [attr.data-p-disabled]=\"disabled\"\n                [attr.data-p-focused]=\"focused\"\n                [attr.data-pc-section]=\"'input'\"\n            >\n                <ng-container *ngIf=\"checked()\">\n                    <ng-container *ngIf=\"!checkboxIconTemplate\">\n                        <span *ngIf=\"checkboxIcon\" class=\"p-checkbox-icon\" [ngClass]=\"checkboxIcon\" [attr.data-pc-section]=\"'icon'\"></span>\n                        <CheckIcon *ngIf=\"!checkboxIcon\" [styleClass]=\"'p-checkbox-icon'\" [attr.data-pc-section]=\"'icon'\" />\n                    </ng-container>\n                    <span *ngIf=\"checkboxIconTemplate\" class=\"p-checkbox-icon\" [attr.data-pc-section]=\"'icon'\">\n                        <ng-template *ngTemplateOutlet=\"checkboxIconTemplate\"></ng-template>\n                    </span>\n                </ng-container>\n            </div>\n        </div>\n        <label\n            (click)=\"onClick($event)\"\n            [class]=\"labelStyleClass\"\n            [ngClass]=\"{ 'p-checkbox-label': true, 'p-checkbox-label-active': checked(), 'p-disabled': disabled, 'p-checkbox-label-focus': focused }\"\n            *ngIf=\"label\"\n            [attr.for]=\"inputId\"\n            [attr.data-pc-section]=\"'label'\"\n        >\n            {{ label }}</label\n        >\n    `, providers: [CHECKBOX_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;vertical-align:bottom;position:relative}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], binary: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], labelStyleClass: [{\n                type: Input\n            }], formControl: [{\n                type: Input\n            }], checkboxIcon: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], trueValue: [{\n                type: Input\n            }], falseValue: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], inputViewChild: [{\n                type: ViewChild,\n                args: ['input']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass CheckboxModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: CheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: CheckboxModule, declarations: [Checkbox], imports: [CommonModule, CheckIcon], exports: [Checkbox, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: CheckboxModule, imports: [CommonModule, CheckIcon, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: CheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, CheckIcon],\n                    exports: [Checkbox, SharedModule],\n                    declarations: [Checkbox]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CHECKBOX_VALUE_ACCESSOR, Checkbox, CheckboxModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}