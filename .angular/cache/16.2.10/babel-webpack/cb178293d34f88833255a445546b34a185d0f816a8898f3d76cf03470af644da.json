{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport Quill from 'quill';\nfunction Editor_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Editor_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, Editor_div_1_ng_container_2_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate);\n  }\n}\nfunction Editor_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"span\", 5)(2, \"select\", 6)(3, \"option\", 7);\n    i0.ɵɵtext(4, \"Heading\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"option\", 8);\n    i0.ɵɵtext(6, \"Subheading\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 9);\n    i0.ɵɵtext(8, \"Normal\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"select\", 10)(10, \"option\", 9);\n    i0.ɵɵtext(11, \"Sans Serif\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 11);\n    i0.ɵɵtext(13, \"Serif\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 12);\n    i0.ɵɵtext(15, \"Monospace\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"span\", 5);\n    i0.ɵɵelement(17, \"button\", 13)(18, \"button\", 14)(19, \"button\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"span\", 5);\n    i0.ɵɵelement(21, \"select\", 16)(22, \"select\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"span\", 5);\n    i0.ɵɵelement(24, \"button\", 18)(25, \"button\", 19);\n    i0.ɵɵelementStart(26, \"select\", 20);\n    i0.ɵɵelement(27, \"option\", 9);\n    i0.ɵɵelementStart(28, \"option\", 21);\n    i0.ɵɵtext(29, \"center\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"option\", 22);\n    i0.ɵɵtext(31, \"right\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"option\", 23);\n    i0.ɵɵtext(33, \"justify\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"span\", 5);\n    i0.ɵɵelement(35, \"button\", 24)(36, \"button\", 25)(37, \"button\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"span\", 5);\n    i0.ɵɵelement(39, \"button\", 27);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = [[[\"p-header\"]]];\nconst _c1 = [\"p-header\"];\nconst EDITOR_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Editor),\n  multi: true\n};\n/**\n * Editor groups a collection of contents in tabs.\n * @group Components\n */\nclass Editor {\n  el;\n  /**\n   * Inline style of the container.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the container.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Placeholder text to show when editor is empty.\n   * @group Props\n   */\n  placeholder;\n  /**\n   * Whitelist of formats to display, see here for available options.\n   * @group Props\n   */\n  formats;\n  /**\n   * Modules configuration of Editor, see here for available options.\n   * @group Props\n   */\n  modules;\n  /**\n   * DOM Element or a CSS selector for a DOM Element, within which the editor’s p elements (i.e. tooltips, etc.) should be confined. Currently, it only considers left and right boundaries.\n   * @group Props\n   */\n  bounds;\n  /**\n   * DOM Element or a CSS selector for a DOM Element, specifying which container has the scrollbars (i.e. overflow-y: auto), if is has been changed from the default ql-editor with custom CSS. Necessary to fix scroll jumping bugs when Quill is set to auto grow its height, and another ancestor container is responsible from the scrolling..\n   * @group Props\n   */\n  scrollingContainer;\n  /**\n   * Shortcut for debug. Note debug is a static method and will affect other instances of Quill editors on the page. Only warning and error messages are enabled by default.\n   * @group Props\n   */\n  debug;\n  /**\n   * Whether to instantiate the editor to read-only mode.\n   * @group Props\n   */\n  get readonly() {\n    return this._readonly;\n  }\n  set readonly(val) {\n    this._readonly = val;\n    if (this.quill) {\n      if (this._readonly) this.quill.disable();else this.quill.enable();\n    }\n  }\n  /**\n   * Callback to invoke when the quill modules are loaded.\n   * @param {EditorInitEvent} event - custom event.\n   * @group Emits\n   */\n  onInit = new EventEmitter();\n  /**\n   * Callback to invoke when text of editor changes.\n   * @param {EditorTextChangeEvent} event - custom event.\n   * @group Emits\n   */\n  onTextChange = new EventEmitter();\n  /**\n   * Callback to invoke when selection of the text changes.\n   * @param {EditorSelectionChangeEvent} event - custom event.\n   * @group Emits\n   */\n  onSelectionChange = new EventEmitter();\n  templates;\n  toolbar;\n  value;\n  delayedCommand = null;\n  _readonly = false;\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  quill;\n  headerTemplate;\n  get isAttachedQuillEditorToDOM() {\n    return this.quillElements?.editorElement?.isConnected;\n  }\n  quillElements;\n  constructor(el) {\n    this.el = el;\n  }\n  ngAfterViewInit() {\n    this.initQuillElements();\n    if (this.isAttachedQuillEditorToDOM) {\n      this.initQuillEditor();\n    }\n  }\n  ngAfterViewChecked() {\n    // The problem is inside the `quill` library, we need to wait for a new release.\n    // Function `isLine` - used `getComputedStyle`, it was rewritten in the next release.\n    // (We need to wait for a release higher than 1.3.7).\n    // These checks and code can be removed.\n    if (!this.quill && this.isAttachedQuillEditorToDOM) {\n      this.initQuillEditor();\n    }\n    // Can also be deleted after updating `quill`.\n    if (this.delayedCommand && this.isAttachedQuillEditorToDOM) {\n      this.delayedCommand();\n      this.delayedCommand = null;\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n      }\n    });\n  }\n  writeValue(value) {\n    this.value = value;\n    if (this.quill) {\n      if (value) {\n        const command = () => {\n          this.quill.setContents(this.quill.clipboard.convert(this.value));\n        };\n        if (this.isAttachedQuillEditorToDOM) {\n          command();\n        } else {\n          this.delayedCommand = command;\n        }\n      } else {\n        const command = () => {\n          this.quill.setText('');\n        };\n        if (this.isAttachedQuillEditorToDOM) {\n          command();\n        } else {\n          this.delayedCommand = command;\n        }\n      }\n    }\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  getQuill() {\n    return this.quill;\n  }\n  initQuillEditor() {\n    this.initQuillElements();\n    const {\n      toolbarElement,\n      editorElement\n    } = this.quillElements;\n    let defaultModule = {\n      toolbar: toolbarElement\n    };\n    let modules = this.modules ? {\n      ...defaultModule,\n      ...this.modules\n    } : defaultModule;\n    this.quill = new Quill(editorElement, {\n      modules: modules,\n      placeholder: this.placeholder,\n      readOnly: this.readonly,\n      theme: 'snow',\n      formats: this.formats,\n      bounds: this.bounds,\n      debug: this.debug,\n      scrollingContainer: this.scrollingContainer\n    });\n    if (this.value) {\n      this.quill.setContents(this.quill.clipboard.convert(this.value));\n    }\n    this.quill.on('text-change', (delta, oldContents, source) => {\n      if (source === 'user') {\n        let html = DomHandler.findSingle(editorElement, '.ql-editor').innerHTML;\n        let text = this.quill.getText().trim();\n        if (html === '<p><br></p>') {\n          html = null;\n        }\n        this.onTextChange.emit({\n          htmlValue: html,\n          textValue: text,\n          delta: delta,\n          source: source\n        });\n        this.onModelChange(html);\n        this.onModelTouched();\n      }\n    });\n    this.quill.on('selection-change', (range, oldRange, source) => {\n      this.onSelectionChange.emit({\n        range: range,\n        oldRange: oldRange,\n        source: source\n      });\n    });\n    this.onInit.emit({\n      editor: this.quill\n    });\n  }\n  initQuillElements() {\n    if (!this.quillElements) {\n      this.quillElements = {\n        editorElement: DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-content'),\n        toolbarElement: DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-toolbar')\n      };\n    }\n  }\n  static ɵfac = function Editor_Factory(t) {\n    return new (t || Editor)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Editor,\n    selectors: [[\"p-editor\"]],\n    contentQueries: function Editor_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, Header, 5);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbar = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      style: \"style\",\n      styleClass: \"styleClass\",\n      placeholder: \"placeholder\",\n      formats: \"formats\",\n      modules: \"modules\",\n      bounds: \"bounds\",\n      scrollingContainer: \"scrollingContainer\",\n      debug: \"debug\",\n      readonly: \"readonly\"\n    },\n    outputs: {\n      onInit: \"onInit\",\n      onTextChange: \"onTextChange\",\n      onSelectionChange: \"onSelectionChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([EDITOR_VALUE_ACCESSOR])],\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 6,\n    consts: [[3, \"ngClass\"], [\"class\", \"p-editor-toolbar\", 4, \"ngIf\"], [1, \"p-editor-content\", 3, \"ngStyle\"], [1, \"p-editor-toolbar\"], [4, \"ngTemplateOutlet\"], [1, \"ql-formats\"], [1, \"ql-header\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"selected\", \"\"], [1, \"ql-font\"], [\"value\", \"serif\"], [\"value\", \"monospace\"], [\"aria-label\", \"Bold\", \"type\", \"button\", 1, \"ql-bold\"], [\"aria-label\", \"Italic\", \"type\", \"button\", 1, \"ql-italic\"], [\"aria-label\", \"Underline\", \"type\", \"button\", 1, \"ql-underline\"], [1, \"ql-color\"], [1, \"ql-background\"], [\"value\", \"ordered\", \"aria-label\", \"Ordered List\", \"type\", \"button\", 1, \"ql-list\"], [\"value\", \"bullet\", \"aria-label\", \"Unordered List\", \"type\", \"button\", 1, \"ql-list\"], [1, \"ql-align\"], [\"value\", \"center\"], [\"value\", \"right\"], [\"value\", \"justify\"], [\"aria-label\", \"Insert Link\", \"type\", \"button\", 1, \"ql-link\"], [\"aria-label\", \"Insert Image\", \"type\", \"button\", 1, \"ql-image\"], [\"aria-label\", \"Insert Code Block\", \"type\", \"button\", 1, \"ql-code-block\"], [\"aria-label\", \"Remove Styles\", \"type\", \"button\", 1, \"ql-clean\"]],\n    template: function Editor_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, Editor_div_1_Template, 3, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, Editor_div_2_Template, 40, 0, \"div\", 1);\n        i0.ɵɵelement(3, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", \"p-editor-container\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.toolbar || ctx.headerTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.toolbar && !ctx.headerTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngStyle\", ctx.style);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle],\n    styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Editor, [{\n    type: Component,\n    args: [{\n      selector: 'p-editor',\n      template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                        <option value=\"1\">Heading</option>\n                        <option value=\"2\">Subheading</option>\n                        <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                        <option selected>Sans Serif</option>\n                        <option value=\"serif\">Serif</option>\n                        <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\">center</option>\n                        <option value=\"right\">right</option>\n                        <option value=\"justify\">justify</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `,\n      providers: [EDITOR_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    onInit: [{\n      type: Output\n    }],\n    onTextChange: [{\n      type: Output\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    toolbar: [{\n      type: ContentChild,\n      args: [Header]\n    }]\n  });\n})();\nclass EditorModule {\n  static ɵfac = function EditorModule_Factory(t) {\n    return new (t || EditorModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: EditorModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Editor, SharedModule],\n      declarations: [Editor]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EDITOR_VALUE_ACCESSOR, Editor, EditorModule };","map":{"version":3,"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ContentChildren","ContentChild","NgModule","i1","CommonModule","Header","PrimeTemplate","SharedModule","DomHandler","NG_VALUE_ACCESSOR","Quill","Editor_div_1_ng_container_2_Template","rf","ctx","ɵɵelementContainer","Editor_div_1_Template","ɵɵelementStart","ɵɵprojection","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","headerTemplate","Editor_div_2_Template","ɵɵtext","ɵɵelement","_c0","_c1","EDITOR_VALUE_ACCESSOR","provide","useExisting","Editor","multi","el","style","styleClass","placeholder","formats","modules","bounds","scrollingContainer","debug","readonly","_readonly","val","quill","disable","enable","onInit","onTextChange","onSelectionChange","templates","toolbar","value","delayedCommand","onModelChange","onModelTouched","isAttachedQuillEditorToDOM","quillElements","editorElement","isConnected","constructor","ngAfterViewInit","initQuillElements","initQuillEditor","ngAfterViewChecked","ngAfterContentInit","forEach","item","getType","template","writeValue","command","setContents","clipboard","convert","setText","registerOnChange","fn","registerOnTouched","getQuill","toolbarElement","defaultModule","readOnly","theme","on","delta","oldContents","source","html","findSingle","innerHTML","text","getText","trim","emit","htmlValue","textValue","range","oldRange","editor","nativeElement","ɵfac","Editor_Factory","t","ɵɵdirectiveInject","ElementRef","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","Editor_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","inputs","outputs","features","ɵɵProvidersFeature","ngContentSelectors","decls","vars","consts","Editor_Template","ɵɵprojectionDef","ɵɵclassMap","dependencies","NgClass","NgIf","NgTemplateOutlet","NgStyle","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","providers","OnPush","None","host","class","EditorModule","EditorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/sandbox/node_modules/primeng/fesm2022/primeng-editor.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport Quill from 'quill';\n\nconst EDITOR_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Editor),\n    multi: true\n};\n/**\n * Editor groups a collection of contents in tabs.\n * @group Components\n */\nclass Editor {\n    el;\n    /**\n     * Inline style of the container.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the container.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Placeholder text to show when editor is empty.\n     * @group Props\n     */\n    placeholder;\n    /**\n     * Whitelist of formats to display, see here for available options.\n     * @group Props\n     */\n    formats;\n    /**\n     * Modules configuration of Editor, see here for available options.\n     * @group Props\n     */\n    modules;\n    /**\n     * DOM Element or a CSS selector for a DOM Element, within which the editor’s p elements (i.e. tooltips, etc.) should be confined. Currently, it only considers left and right boundaries.\n     * @group Props\n     */\n    bounds;\n    /**\n     * DOM Element or a CSS selector for a DOM Element, specifying which container has the scrollbars (i.e. overflow-y: auto), if is has been changed from the default ql-editor with custom CSS. Necessary to fix scroll jumping bugs when Quill is set to auto grow its height, and another ancestor container is responsible from the scrolling..\n     * @group Props\n     */\n    scrollingContainer;\n    /**\n     * Shortcut for debug. Note debug is a static method and will affect other instances of Quill editors on the page. Only warning and error messages are enabled by default.\n     * @group Props\n     */\n    debug;\n    /**\n     * Whether to instantiate the editor to read-only mode.\n     * @group Props\n     */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(val) {\n        this._readonly = val;\n        if (this.quill) {\n            if (this._readonly)\n                this.quill.disable();\n            else\n                this.quill.enable();\n        }\n    }\n    /**\n     * Callback to invoke when the quill modules are loaded.\n     * @param {EditorInitEvent} event - custom event.\n     * @group Emits\n     */\n    onInit = new EventEmitter();\n    /**\n     * Callback to invoke when text of editor changes.\n     * @param {EditorTextChangeEvent} event - custom event.\n     * @group Emits\n     */\n    onTextChange = new EventEmitter();\n    /**\n     * Callback to invoke when selection of the text changes.\n     * @param {EditorSelectionChangeEvent} event - custom event.\n     * @group Emits\n     */\n    onSelectionChange = new EventEmitter();\n    templates;\n    toolbar;\n    value;\n    delayedCommand = null;\n    _readonly = false;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    quill;\n    headerTemplate;\n    get isAttachedQuillEditorToDOM() {\n        return this.quillElements?.editorElement?.isConnected;\n    }\n    quillElements;\n    constructor(el) {\n        this.el = el;\n    }\n    ngAfterViewInit() {\n        this.initQuillElements();\n        if (this.isAttachedQuillEditorToDOM) {\n            this.initQuillEditor();\n        }\n    }\n    ngAfterViewChecked() {\n        // The problem is inside the `quill` library, we need to wait for a new release.\n        // Function `isLine` - used `getComputedStyle`, it was rewritten in the next release.\n        // (We need to wait for a release higher than 1.3.7).\n        // These checks and code can be removed.\n        if (!this.quill && this.isAttachedQuillEditorToDOM) {\n            this.initQuillEditor();\n        }\n        // Can also be deleted after updating `quill`.\n        if (this.delayedCommand && this.isAttachedQuillEditorToDOM) {\n            this.delayedCommand();\n            this.delayedCommand = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    writeValue(value) {\n        this.value = value;\n        if (this.quill) {\n            if (value) {\n                const command = () => {\n                    this.quill.setContents(this.quill.clipboard.convert(this.value));\n                };\n                if (this.isAttachedQuillEditorToDOM) {\n                    command();\n                }\n                else {\n                    this.delayedCommand = command;\n                }\n            }\n            else {\n                const command = () => {\n                    this.quill.setText('');\n                };\n                if (this.isAttachedQuillEditorToDOM) {\n                    command();\n                }\n                else {\n                    this.delayedCommand = command;\n                }\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    getQuill() {\n        return this.quill;\n    }\n    initQuillEditor() {\n        this.initQuillElements();\n        const { toolbarElement, editorElement } = this.quillElements;\n        let defaultModule = { toolbar: toolbarElement };\n        let modules = this.modules ? { ...defaultModule, ...this.modules } : defaultModule;\n        this.quill = new Quill(editorElement, {\n            modules: modules,\n            placeholder: this.placeholder,\n            readOnly: this.readonly,\n            theme: 'snow',\n            formats: this.formats,\n            bounds: this.bounds,\n            debug: this.debug,\n            scrollingContainer: this.scrollingContainer\n        });\n        if (this.value) {\n            this.quill.setContents(this.quill.clipboard.convert(this.value));\n        }\n        this.quill.on('text-change', (delta, oldContents, source) => {\n            if (source === 'user') {\n                let html = DomHandler.findSingle(editorElement, '.ql-editor').innerHTML;\n                let text = this.quill.getText().trim();\n                if (html === '<p><br></p>') {\n                    html = null;\n                }\n                this.onTextChange.emit({\n                    htmlValue: html,\n                    textValue: text,\n                    delta: delta,\n                    source: source\n                });\n                this.onModelChange(html);\n                this.onModelTouched();\n            }\n        });\n        this.quill.on('selection-change', (range, oldRange, source) => {\n            this.onSelectionChange.emit({\n                range: range,\n                oldRange: oldRange,\n                source: source\n            });\n        });\n        this.onInit.emit({\n            editor: this.quill\n        });\n    }\n    initQuillElements() {\n        if (!this.quillElements) {\n            this.quillElements = {\n                editorElement: DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-content'),\n                toolbarElement: DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-toolbar')\n            };\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Editor, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: Editor, selector: \"p-editor\", inputs: { style: \"style\", styleClass: \"styleClass\", placeholder: \"placeholder\", formats: \"formats\", modules: \"modules\", bounds: \"bounds\", scrollingContainer: \"scrollingContainer\", debug: \"debug\", readonly: \"readonly\" }, outputs: { onInit: \"onInit\", onTextChange: \"onTextChange\", onSelectionChange: \"onSelectionChange\" }, host: { classAttribute: \"p-element\" }, providers: [EDITOR_VALUE_ACCESSOR], queries: [{ propertyName: \"toolbar\", first: true, predicate: Header, descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                        <option value=\"1\">Heading</option>\n                        <option value=\"2\">Subheading</option>\n                        <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                        <option selected>Sans Serif</option>\n                        <option value=\"serif\">Serif</option>\n                        <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\">center</option>\n                        <option value=\"right\">right</option>\n                        <option value=\"justify\">justify</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `, isInline: true, styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Editor, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-editor', template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                        <option value=\"1\">Heading</option>\n                        <option value=\"2\">Subheading</option>\n                        <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                        <option selected>Sans Serif</option>\n                        <option value=\"serif\">Serif</option>\n                        <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\">center</option>\n                        <option value=\"right\">right</option>\n                        <option value=\"justify\">justify</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `, providers: [EDITOR_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], onInit: [{\n                type: Output\n            }], onTextChange: [{\n                type: Output\n            }], onSelectionChange: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], toolbar: [{\n                type: ContentChild,\n                args: [Header]\n            }] } });\nclass EditorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: EditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: EditorModule, declarations: [Editor], imports: [CommonModule], exports: [Editor, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: EditorModule, imports: [CommonModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: EditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Editor, SharedModule],\n                    declarations: [Editor]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EDITOR_VALUE_ACCESSOR, Editor, EditorModule };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,EAAEC,YAAY,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,iBAAiB,EAAEC,KAAK,EAAEC,MAAM,EAAEC,eAAe,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,eAAe;AACvK,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,MAAM,EAAEC,aAAa,EAAEC,YAAY,QAAQ,aAAa;AACjE,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,qCAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA8NmEpB,EAAE,CAAAsB,kBAAA,EAKhB,CAAC;EAAA;AAAA;AAAA,SAAAC,sBAAAH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IALapB,EAAE,CAAAwB,cAAA,YAGpB,CAAC;IAHiBxB,EAAE,CAAAyB,YAAA,EAIrC,CAAC;IAJkCzB,EAAE,CAAA0B,UAAA,IAAAP,oCAAA,yBAKhB,CAAC;IALanB,EAAE,CAAA2B,YAAA,CAM9E,CAAC;EAAA;EAAA,IAAAP,EAAA;IAAA,MAAAQ,MAAA,GAN2E5B,EAAE,CAAA6B,aAAA;IAAF7B,EAAE,CAAA8B,SAAA,EAKjC,CAAC;IAL8B9B,EAAE,CAAA+B,UAAA,qBAAAH,MAAA,CAAAI,cAKjC,CAAC;EAAA;AAAA;AAAA,SAAAC,sBAAAb,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAL8BpB,EAAE,CAAAwB,cAAA,YAOlB,CAAC,aAAD,CAAC,eAAD,CAAC,eAAD,CAAC;IAPexB,EAAE,CAAAkC,MAAA,aAU/C,CAAC;IAV4ClC,EAAE,CAAA2B,YAAA,CAUtC,CAAC;IAVmC3B,EAAE,CAAAwB,cAAA,eAWtD,CAAC;IAXmDxB,EAAE,CAAAkC,MAAA,gBAW5C,CAAC;IAXyClC,EAAE,CAAA2B,YAAA,CAWnC,CAAC;IAXgC3B,EAAE,CAAAwB,cAAA,eAYvD,CAAC;IAZoDxB,EAAE,CAAAkC,MAAA,YAYjD,CAAC;IAZ8ClC,EAAE,CAAA2B,YAAA,CAYxC,CAAC,CAAD,CAAC;IAZqC3B,EAAE,CAAAwB,cAAA,gBAcpD,CAAC,gBAAD,CAAC;IAdiDxB,EAAE,CAAAkC,MAAA,iBAe7C,CAAC;IAf0ClC,EAAE,CAAA2B,YAAA,CAepC,CAAC;IAfiC3B,EAAE,CAAAwB,cAAA,iBAgBlD,CAAC;IAhB+CxB,EAAE,CAAAkC,MAAA,YAgB7C,CAAC;IAhB0ClC,EAAE,CAAA2B,YAAA,CAgBpC,CAAC;IAhBiC3B,EAAE,CAAAwB,cAAA,iBAiB9C,CAAC;IAjB2CxB,EAAE,CAAAkC,MAAA,gBAiBrC,CAAC;IAjBkClC,EAAE,CAAA2B,YAAA,CAiB5B,CAAC,CAAD,CAAC,CAAD,CAAC;IAjByB3B,EAAE,CAAAwB,cAAA,cAoBvD,CAAC;IApBoDxB,EAAE,CAAAmC,SAAA,iBAqBX,CAAC,iBAAD,CAAC,iBAAD,CAAC;IArBQnC,EAAE,CAAA2B,YAAA,CAwBzE,CAAC;IAxBsE3B,EAAE,CAAAwB,cAAA,cAyBvD,CAAC;IAzBoDxB,EAAE,CAAAmC,SAAA,iBA0B1C,CAAC,iBAAD,CAAC;IA1BuCnC,EAAE,CAAA2B,YAAA,CA4BzE,CAAC;IA5BsE3B,EAAE,CAAAwB,cAAA,cA6BvD,CAAC;IA7BoDxB,EAAE,CAAAmC,SAAA,iBA8Ba,CAAC,iBAAD,CAAC;IA9BhBnC,EAAE,CAAAwB,cAAA,iBAgCnD,CAAC;IAhCgDxB,EAAE,CAAAmC,SAAA,gBAiC9C,CAAC;IAjC2CnC,EAAE,CAAAwB,cAAA,iBAkCjD,CAAC;IAlC8CxB,EAAE,CAAAkC,MAAA,aAkC3C,CAAC;IAlCwClC,EAAE,CAAA2B,YAAA,CAkClC,CAAC;IAlC+B3B,EAAE,CAAAwB,cAAA,iBAmClD,CAAC;IAnC+CxB,EAAE,CAAAkC,MAAA,YAmC7C,CAAC;IAnC0ClC,EAAE,CAAA2B,YAAA,CAmCpC,CAAC;IAnCiC3B,EAAE,CAAAwB,cAAA,iBAoChD,CAAC;IApC6CxB,EAAE,CAAAkC,MAAA,cAoCzC,CAAC;IApCsClC,EAAE,CAAA2B,YAAA,CAoChC,CAAC,CAAD,CAAC,CAAD,CAAC;IApC6B3B,EAAE,CAAAwB,cAAA,cAuCvD,CAAC;IAvCoDxB,EAAE,CAAAmC,SAAA,iBAwCJ,CAAC,iBAAD,CAAC,iBAAD,CAAC;IAxCCnC,EAAE,CAAA2B,YAAA,CA2CzE,CAAC;IA3CsE3B,EAAE,CAAAwB,cAAA,cA4CvD,CAAC;IA5CoDxB,EAAE,CAAAmC,SAAA,iBA6CD,CAAC;IA7CFnC,EAAE,CAAA2B,YAAA,CA8CzE,CAAC,CAAD,CAAC;EAAA;AAAA;AAAA,MAAAS,GAAA;AAAA,MAAAC,GAAA;AA1QvB,MAAMC,qBAAqB,GAAG;EAC1BC,OAAO,EAAEtB,iBAAiB;EAC1BuB,WAAW,EAAEvC,UAAU,CAAC,MAAMwC,MAAM,CAAC;EACrCC,KAAK,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AACA,MAAMD,MAAM,CAAC;EACTE,EAAE;EACF;AACJ;AACA;AACA;EACIC,KAAK;EACL;AACJ;AACA;AACA;EACIC,UAAU;EACV;AACJ;AACA;AACA;EACIC,WAAW;EACX;AACJ;AACA;AACA;EACIC,OAAO;EACP;AACJ;AACA;AACA;EACIC,OAAO;EACP;AACJ;AACA;AACA;EACIC,MAAM;EACN;AACJ;AACA;AACA;EACIC,kBAAkB;EAClB;AACJ;AACA;AACA;EACIC,KAAK;EACL;AACJ;AACA;AACA;EACI,IAAIC,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACC,SAAS;EACzB;EACA,IAAID,QAAQA,CAACE,GAAG,EAAE;IACd,IAAI,CAACD,SAAS,GAAGC,GAAG;IACpB,IAAI,IAAI,CAACC,KAAK,EAAE;MACZ,IAAI,IAAI,CAACF,SAAS,EACd,IAAI,CAACE,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,KAErB,IAAI,CAACD,KAAK,CAACE,MAAM,CAAC,CAAC;IAC3B;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIC,MAAM,GAAG,IAAIxD,YAAY,CAAC,CAAC;EAC3B;AACJ;AACA;AACA;AACA;EACIyD,YAAY,GAAG,IAAIzD,YAAY,CAAC,CAAC;EACjC;AACJ;AACA;AACA;AACA;EACI0D,iBAAiB,GAAG,IAAI1D,YAAY,CAAC,CAAC;EACtC2D,SAAS;EACTC,OAAO;EACPC,KAAK;EACLC,cAAc,GAAG,IAAI;EACrBX,SAAS,GAAG,KAAK;EACjBY,aAAa,GAAGA,CAAA,KAAM,CAAE,CAAC;EACzBC,cAAc,GAAGA,CAAA,KAAM,CAAE,CAAC;EAC1BX,KAAK;EACLvB,cAAc;EACd,IAAImC,0BAA0BA,CAAA,EAAG;IAC7B,OAAO,IAAI,CAACC,aAAa,EAAEC,aAAa,EAAEC,WAAW;EACzD;EACAF,aAAa;EACbG,WAAWA,CAAC5B,EAAE,EAAE;IACZ,IAAI,CAACA,EAAE,GAAGA,EAAE;EAChB;EACA6B,eAAeA,CAAA,EAAG;IACd,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACxB,IAAI,IAAI,CAACN,0BAA0B,EAAE;MACjC,IAAI,CAACO,eAAe,CAAC,CAAC;IAC1B;EACJ;EACAC,kBAAkBA,CAAA,EAAG;IACjB;IACA;IACA;IACA;IACA,IAAI,CAAC,IAAI,CAACpB,KAAK,IAAI,IAAI,CAACY,0BAA0B,EAAE;MAChD,IAAI,CAACO,eAAe,CAAC,CAAC;IAC1B;IACA;IACA,IAAI,IAAI,CAACV,cAAc,IAAI,IAAI,CAACG,0BAA0B,EAAE;MACxD,IAAI,CAACH,cAAc,CAAC,CAAC;MACrB,IAAI,CAACA,cAAc,GAAG,IAAI;IAC9B;EACJ;EACAY,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACf,SAAS,CAACgB,OAAO,CAAEC,IAAI,IAAK;MAC7B,QAAQA,IAAI,CAACC,OAAO,CAAC,CAAC;QAClB,KAAK,QAAQ;UACT,IAAI,CAAC/C,cAAc,GAAG8C,IAAI,CAACE,QAAQ;UACnC;MACR;IACJ,CAAC,CAAC;EACN;EACAC,UAAUA,CAAClB,KAAK,EAAE;IACd,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,IAAI,CAACR,KAAK,EAAE;MACZ,IAAIQ,KAAK,EAAE;QACP,MAAMmB,OAAO,GAAGA,CAAA,KAAM;UAClB,IAAI,CAAC3B,KAAK,CAAC4B,WAAW,CAAC,IAAI,CAAC5B,KAAK,CAAC6B,SAAS,CAACC,OAAO,CAAC,IAAI,CAACtB,KAAK,CAAC,CAAC;QACpE,CAAC;QACD,IAAI,IAAI,CAACI,0BAA0B,EAAE;UACjCe,OAAO,CAAC,CAAC;QACb,CAAC,MACI;UACD,IAAI,CAAClB,cAAc,GAAGkB,OAAO;QACjC;MACJ,CAAC,MACI;QACD,MAAMA,OAAO,GAAGA,CAAA,KAAM;UAClB,IAAI,CAAC3B,KAAK,CAAC+B,OAAO,CAAC,EAAE,CAAC;QAC1B,CAAC;QACD,IAAI,IAAI,CAACnB,0BAA0B,EAAE;UACjCe,OAAO,CAAC,CAAC;QACb,CAAC,MACI;UACD,IAAI,CAAClB,cAAc,GAAGkB,OAAO;QACjC;MACJ;IACJ;EACJ;EACAK,gBAAgBA,CAACC,EAAE,EAAE;IACjB,IAAI,CAACvB,aAAa,GAAGuB,EAAE;EAC3B;EACAC,iBAAiBA,CAACD,EAAE,EAAE;IAClB,IAAI,CAACtB,cAAc,GAAGsB,EAAE;EAC5B;EACAE,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACnC,KAAK;EACrB;EACAmB,eAAeA,CAAA,EAAG;IACd,IAAI,CAACD,iBAAiB,CAAC,CAAC;IACxB,MAAM;MAAEkB,cAAc;MAAEtB;IAAc,CAAC,GAAG,IAAI,CAACD,aAAa;IAC5D,IAAIwB,aAAa,GAAG;MAAE9B,OAAO,EAAE6B;IAAe,CAAC;IAC/C,IAAI3C,OAAO,GAAG,IAAI,CAACA,OAAO,GAAG;MAAE,GAAG4C,aAAa;MAAE,GAAG,IAAI,CAAC5C;IAAQ,CAAC,GAAG4C,aAAa;IAClF,IAAI,CAACrC,KAAK,GAAG,IAAIrC,KAAK,CAACmD,aAAa,EAAE;MAClCrB,OAAO,EAAEA,OAAO;MAChBF,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7B+C,QAAQ,EAAE,IAAI,CAACzC,QAAQ;MACvB0C,KAAK,EAAE,MAAM;MACb/C,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBE,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBE,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBD,kBAAkB,EAAE,IAAI,CAACA;IAC7B,CAAC,CAAC;IACF,IAAI,IAAI,CAACa,KAAK,EAAE;MACZ,IAAI,CAACR,KAAK,CAAC4B,WAAW,CAAC,IAAI,CAAC5B,KAAK,CAAC6B,SAAS,CAACC,OAAO,CAAC,IAAI,CAACtB,KAAK,CAAC,CAAC;IACpE;IACA,IAAI,CAACR,KAAK,CAACwC,EAAE,CAAC,aAAa,EAAE,CAACC,KAAK,EAAEC,WAAW,EAAEC,MAAM,KAAK;MACzD,IAAIA,MAAM,KAAK,MAAM,EAAE;QACnB,IAAIC,IAAI,GAAGnF,UAAU,CAACoF,UAAU,CAAC/B,aAAa,EAAE,YAAY,CAAC,CAACgC,SAAS;QACvE,IAAIC,IAAI,GAAG,IAAI,CAAC/C,KAAK,CAACgD,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;QACtC,IAAIL,IAAI,KAAK,aAAa,EAAE;UACxBA,IAAI,GAAG,IAAI;QACf;QACA,IAAI,CAACxC,YAAY,CAAC8C,IAAI,CAAC;UACnBC,SAAS,EAAEP,IAAI;UACfQ,SAAS,EAAEL,IAAI;UACfN,KAAK,EAAEA,KAAK;UACZE,MAAM,EAAEA;QACZ,CAAC,CAAC;QACF,IAAI,CAACjC,aAAa,CAACkC,IAAI,CAAC;QACxB,IAAI,CAACjC,cAAc,CAAC,CAAC;MACzB;IACJ,CAAC,CAAC;IACF,IAAI,CAACX,KAAK,CAACwC,EAAE,CAAC,kBAAkB,EAAE,CAACa,KAAK,EAAEC,QAAQ,EAAEX,MAAM,KAAK;MAC3D,IAAI,CAACtC,iBAAiB,CAAC6C,IAAI,CAAC;QACxBG,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA,QAAQ;QAClBX,MAAM,EAAEA;MACZ,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAI,CAACxC,MAAM,CAAC+C,IAAI,CAAC;MACbK,MAAM,EAAE,IAAI,CAACvD;IACjB,CAAC,CAAC;EACN;EACAkB,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAAC,IAAI,CAACL,aAAa,EAAE;MACrB,IAAI,CAACA,aAAa,GAAG;QACjBC,aAAa,EAAErD,UAAU,CAACoF,UAAU,CAAC,IAAI,CAACzD,EAAE,CAACoE,aAAa,EAAE,sBAAsB,CAAC;QACnFpB,cAAc,EAAE3E,UAAU,CAACoF,UAAU,CAAC,IAAI,CAACzD,EAAE,CAACoE,aAAa,EAAE,sBAAsB;MACvF,CAAC;IACL;EACJ;EACA,OAAOC,IAAI,YAAAC,eAAAC,CAAA;IAAA,YAAAA,CAAA,IAAwFzE,MAAM,EAAhBzC,EAAE,CAAAmH,iBAAA,CAAgCnH,EAAE,CAACoH,UAAU;EAAA;EACxI,OAAOC,IAAI,kBAD8ErH,EAAE,CAAAsH,iBAAA;IAAAC,IAAA,EACJ9E,MAAM;IAAA+E,SAAA;IAAAC,cAAA,WAAAC,sBAAAtG,EAAA,EAAAC,GAAA,EAAAsG,QAAA;MAAA,IAAAvG,EAAA;QADJpB,EAAE,CAAA4H,cAAA,CAAAD,QAAA,EACme9G,MAAM;QAD3eb,EAAE,CAAA4H,cAAA,CAAAD,QAAA,EACwiB7G,aAAa;MAAA;MAAA,IAAAM,EAAA;QAAA,IAAAyG,EAAA;QADvjB7H,EAAE,CAAA8H,cAAA,CAAAD,EAAA,GAAF7H,EAAE,CAAA+H,WAAA,QAAA1G,GAAA,CAAAyC,OAAA,GAAA+D,EAAA,CAAAG,KAAA;QAAFhI,EAAE,CAAA8H,cAAA,CAAAD,EAAA,GAAF7H,EAAE,CAAA+H,WAAA,QAAA1G,GAAA,CAAAwC,SAAA,GAAAgE,EAAA;MAAA;IAAA;IAAAI,SAAA;IAAAC,MAAA;MAAAtF,KAAA;MAAAC,UAAA;MAAAC,WAAA;MAAAC,OAAA;MAAAC,OAAA;MAAAC,MAAA;MAAAC,kBAAA;MAAAC,KAAA;MAAAC,QAAA;IAAA;IAAA+E,OAAA;MAAAzE,MAAA;MAAAC,YAAA;MAAAC,iBAAA;IAAA;IAAAwE,QAAA,GAAFpI,EAAE,CAAAqI,kBAAA,CAC6Y,CAAC/F,qBAAqB,CAAC;IAAAgG,kBAAA,EAAAjG,GAAA;IAAAkG,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAzD,QAAA,WAAA0D,gBAAAtH,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QADtapB,EAAE,CAAA2I,eAAA,CAAAvG,GAAA;QAAFpC,EAAE,CAAAwB,cAAA,YAE7B,CAAC;QAF0BxB,EAAE,CAAA0B,UAAA,IAAAH,qBAAA,gBAM9E,CAAC;QAN2EvB,EAAE,CAAA0B,UAAA,IAAAO,qBAAA,iBA+C9E,CAAC;QA/C2EjC,EAAE,CAAAmC,SAAA,YAgD9B,CAAC;QAhD2BnC,EAAE,CAAA2B,YAAA,CAiDlF,CAAC;MAAA;MAAA,IAAAP,EAAA;QAjD+EpB,EAAE,CAAA4I,UAAA,CAAAvH,GAAA,CAAAwB,UAE9B,CAAC;QAF2B7C,EAAE,CAAA+B,UAAA,gCAEnD,CAAC;QAFgD/B,EAAE,CAAA8B,SAAA,EAGtB,CAAC;QAHmB9B,EAAE,CAAA+B,UAAA,SAAAV,GAAA,CAAAyC,OAAA,IAAAzC,GAAA,CAAAW,cAGtB,CAAC;QAHmBhC,EAAE,CAAA8B,SAAA,EAOpB,CAAC;QAPiB9B,EAAE,CAAA+B,UAAA,UAAAV,GAAA,CAAAyC,OAAA,KAAAzC,GAAA,CAAAW,cAOpB,CAAC;QAPiBhC,EAAE,CAAA8B,SAAA,EAgDrC,CAAC;QAhDkC9B,EAAE,CAAA+B,UAAA,YAAAV,GAAA,CAAAuB,KAgDrC,CAAC;MAAA;IAAA;IAAAiG,YAAA,GAEqJlI,EAAE,CAACmI,OAAO,EAAoFnI,EAAE,CAACoI,IAAI,EAA6FpI,EAAE,CAACqI,gBAAgB,EAAoJrI,EAAE,CAACsI,OAAO;IAAAC,MAAA;IAAAC,aAAA;IAAAC,eAAA;EAAA;AACnkB;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KApD6FrJ,EAAE,CAAAsJ,iBAAA,CAoDJ7G,MAAM,EAAc,CAAC;IACpG8E,IAAI,EAAEpH,SAAS;IACfoJ,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,UAAU;MAAExE,QAAQ,EAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MAAEyE,SAAS,EAAE,CAACnH,qBAAqB,CAAC;MAAE8G,eAAe,EAAEhJ,uBAAuB,CAACsJ,MAAM;MAAEP,aAAa,EAAE9I,iBAAiB,CAACsJ,IAAI;MAAEC,IAAI,EAAE;QACjHC,KAAK,EAAE;MACX,CAAC;MAAEX,MAAM,EAAE,CAAC,mIAAmI;IAAE,CAAC;EAC9J,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE3B,IAAI,EAAEvH,EAAE,CAACoH;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAExE,KAAK,EAAE,CAAC;MACzF2E,IAAI,EAAEjH;IACV,CAAC,CAAC;IAAEuC,UAAU,EAAE,CAAC;MACb0E,IAAI,EAAEjH;IACV,CAAC,CAAC;IAAEwC,WAAW,EAAE,CAAC;MACdyE,IAAI,EAAEjH;IACV,CAAC,CAAC;IAAEyC,OAAO,EAAE,CAAC;MACVwE,IAAI,EAAEjH;IACV,CAAC,CAAC;IAAE0C,OAAO,EAAE,CAAC;MACVuE,IAAI,EAAEjH;IACV,CAAC,CAAC;IAAE2C,MAAM,EAAE,CAAC;MACTsE,IAAI,EAAEjH;IACV,CAAC,CAAC;IAAE4C,kBAAkB,EAAE,CAAC;MACrBqE,IAAI,EAAEjH;IACV,CAAC,CAAC;IAAE6C,KAAK,EAAE,CAAC;MACRoE,IAAI,EAAEjH;IACV,CAAC,CAAC;IAAE8C,QAAQ,EAAE,CAAC;MACXmE,IAAI,EAAEjH;IACV,CAAC,CAAC;IAAEoD,MAAM,EAAE,CAAC;MACT6D,IAAI,EAAEhH;IACV,CAAC,CAAC;IAAEoD,YAAY,EAAE,CAAC;MACf4D,IAAI,EAAEhH;IACV,CAAC,CAAC;IAAEqD,iBAAiB,EAAE,CAAC;MACpB2D,IAAI,EAAEhH;IACV,CAAC,CAAC;IAAEsD,SAAS,EAAE,CAAC;MACZ0D,IAAI,EAAE/G,eAAe;MACrB+I,IAAI,EAAE,CAACzI,aAAa;IACxB,CAAC,CAAC;IAAEgD,OAAO,EAAE,CAAC;MACVyD,IAAI,EAAE9G,YAAY;MAClB8I,IAAI,EAAE,CAAC1I,MAAM;IACjB,CAAC;EAAE,CAAC;AAAA;AAChB,MAAMiJ,YAAY,CAAC;EACf,OAAO9C,IAAI,YAAA+C,qBAAA7C,CAAA;IAAA,YAAAA,CAAA,IAAwF4C,YAAY;EAAA;EAC/G,OAAOE,IAAI,kBA3I8EhK,EAAE,CAAAiK,gBAAA;IAAA1C,IAAA,EA2ISuC;EAAY;EAChH,OAAOI,IAAI,kBA5I8ElK,EAAE,CAAAmK,gBAAA;IAAAC,OAAA,GA4IiCxJ,YAAY,EAAEG,YAAY;EAAA;AAC1J;AACA;EAAA,QAAAsI,SAAA,oBAAAA,SAAA,KA9I6FrJ,EAAE,CAAAsJ,iBAAA,CA8IJQ,YAAY,EAAc,CAAC;IAC1GvC,IAAI,EAAE7G,QAAQ;IACd6I,IAAI,EAAE,CAAC;MACCa,OAAO,EAAE,CAACxJ,YAAY,CAAC;MACvByJ,OAAO,EAAE,CAAC5H,MAAM,EAAE1B,YAAY,CAAC;MAC/BuJ,YAAY,EAAE,CAAC7H,MAAM;IACzB,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASH,qBAAqB,EAAEG,MAAM,EAAEqH,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}